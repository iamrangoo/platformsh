# The name of this app. Must be unique within a project.
name: app

# The runtime the application uses. The 'type' key defines the base container
# image that will be used to run the application. There is a separate base
# container image for each primary language for the application,
# in multiple versions. Check the PHP documentation
# (https://docs.platform.sh/languages/php.html#supported-versions)
# to find the supported versions for the 'php' type.
type: 'php:8.4'

# Indicate to use Composer 2 (leave out if you want Composer 1)
# See how without Composer: https://docs.platform.sh/guides/wordpress/vanilla.html
dependencies:
    php:
        composer/composer: '^2'

# The following block defines a single writable directory, 'web/uploads'
# The 'source' specifies where the writable mount is. The 'local' source
# indicates that the mount point will point to a local directory on the
# application container. The 'source_path' specifies the subdirectory
# from within the source that the mount should point at. 
mounts:
  'web/uploads':
    source: local
    source_path: uploads
  # 'var':
  #   source: service
  #   service: network-storage
  #   source_path: varstuff


# The size of the persistent disk of the application (in MB).
disk: 4000

# Your app's configuration when it's exposed to the web.
web:
    locations:
        "/":
            # The public directory of the app, relative to its root.
            root: "web"
            # The front-controller script to send non-static requests to.
            passthru: "/index.php"
            allow: false
            rules:
                #'\.(avif|bmp|css|eot|gif|ico|jpe?g|js|map|otf|png|svgz?|ttf|webp|woff2?|xml|xsl)$':
                #    allow: true
                # Fix nginx's broken mimetype for xsl/xslt files.
                '\.xslt?$':
                    headers:
                        Content-Type: application/xslt+xml
        '/.well-known':
            root: '.well-known'
            # It appears we serve some static files from this location.
            allow: true
            rules:
                # From .htaccess,
                # Serve traffic-advice as JSON
                # @see https://developer.chrome.com/blog/private-prefetch-proxy/
                # @see https://webmasters.stackexchange.com/questions/138033/what-is-well-known-traffic-advice-directory
                '^\.well-known/traffic-advice$':
                    headers:
                        Content-Type: "application/trafficadvice+json; charset=utf-8"

# The relationships of the application with services or other applications.
#
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form '<service name>:<endpoint name>'.
relationships:
    oracle-mysql: 'oracle-mysql:mysql'
    mariadb:
#    solr:

hooks:
    build: |
        set -e

    deploy: |
        set -e
#        composer install